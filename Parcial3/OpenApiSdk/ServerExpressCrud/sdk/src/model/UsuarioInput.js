/**
 * API Usuarios
 * Documentaci√≥n de la API de Usuarios
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: alejandromonsivais367@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UsuarioInput model module.
 * @module model/UsuarioInput
 * @version 1.0.0
 */
class UsuarioInput {
    /**
     * Constructs a new <code>UsuarioInput</code>.
     * @alias module:model/UsuarioInput
     * @param usuarioNombre {String} 
     * @param usuarioApellido {String} 
     * @param usuarioUsuario {String} 
     * @param usuarioClave {String} 
     * @param usuarioEmail {String} 
     */
    constructor(usuarioNombre, usuarioApellido, usuarioUsuario, usuarioClave, usuarioEmail) { 
        
        UsuarioInput.initialize(this, usuarioNombre, usuarioApellido, usuarioUsuario, usuarioClave, usuarioEmail);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, usuarioNombre, usuarioApellido, usuarioUsuario, usuarioClave, usuarioEmail) { 
        obj['usuario_nombre'] = usuarioNombre;
        obj['usuario_apellido'] = usuarioApellido;
        obj['usuario_usuario'] = usuarioUsuario;
        obj['usuario_clave'] = usuarioClave;
        obj['usuario_email'] = usuarioEmail;
    }

    /**
     * Constructs a <code>UsuarioInput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UsuarioInput} obj Optional instance to populate.
     * @return {module:model/UsuarioInput} The populated <code>UsuarioInput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UsuarioInput();

            if (data.hasOwnProperty('usuario_nombre')) {
                obj['usuario_nombre'] = ApiClient.convertToType(data['usuario_nombre'], 'String');
            }
            if (data.hasOwnProperty('usuario_apellido')) {
                obj['usuario_apellido'] = ApiClient.convertToType(data['usuario_apellido'], 'String');
            }
            if (data.hasOwnProperty('usuario_usuario')) {
                obj['usuario_usuario'] = ApiClient.convertToType(data['usuario_usuario'], 'String');
            }
            if (data.hasOwnProperty('usuario_clave')) {
                obj['usuario_clave'] = ApiClient.convertToType(data['usuario_clave'], 'String');
            }
            if (data.hasOwnProperty('usuario_email')) {
                obj['usuario_email'] = ApiClient.convertToType(data['usuario_email'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UsuarioInput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UsuarioInput</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UsuarioInput.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['usuario_nombre'] && !(typeof data['usuario_nombre'] === 'string' || data['usuario_nombre'] instanceof String)) {
            throw new Error("Expected the field `usuario_nombre` to be a primitive type in the JSON string but got " + data['usuario_nombre']);
        }
        // ensure the json data is a string
        if (data['usuario_apellido'] && !(typeof data['usuario_apellido'] === 'string' || data['usuario_apellido'] instanceof String)) {
            throw new Error("Expected the field `usuario_apellido` to be a primitive type in the JSON string but got " + data['usuario_apellido']);
        }
        // ensure the json data is a string
        if (data['usuario_usuario'] && !(typeof data['usuario_usuario'] === 'string' || data['usuario_usuario'] instanceof String)) {
            throw new Error("Expected the field `usuario_usuario` to be a primitive type in the JSON string but got " + data['usuario_usuario']);
        }
        // ensure the json data is a string
        if (data['usuario_clave'] && !(typeof data['usuario_clave'] === 'string' || data['usuario_clave'] instanceof String)) {
            throw new Error("Expected the field `usuario_clave` to be a primitive type in the JSON string but got " + data['usuario_clave']);
        }
        // ensure the json data is a string
        if (data['usuario_email'] && !(typeof data['usuario_email'] === 'string' || data['usuario_email'] instanceof String)) {
            throw new Error("Expected the field `usuario_email` to be a primitive type in the JSON string but got " + data['usuario_email']);
        }

        return true;
    }


}

UsuarioInput.RequiredProperties = ["usuario_nombre", "usuario_apellido", "usuario_usuario", "usuario_clave", "usuario_email"];

/**
 * @member {String} usuario_nombre
 */
UsuarioInput.prototype['usuario_nombre'] = undefined;

/**
 * @member {String} usuario_apellido
 */
UsuarioInput.prototype['usuario_apellido'] = undefined;

/**
 * @member {String} usuario_usuario
 */
UsuarioInput.prototype['usuario_usuario'] = undefined;

/**
 * @member {String} usuario_clave
 */
UsuarioInput.prototype['usuario_clave'] = undefined;

/**
 * @member {String} usuario_email
 */
UsuarioInput.prototype['usuario_email'] = undefined;






export default UsuarioInput;

